diff --git a/config.h b/config.h
index 25c4001..574d3d6 100644
--- a/config.h
+++ b/config.h
@@ -1,7 +1,8 @@
 /* See LICENSE file for copyright and license details. */
 /* Default settings; can be overriden by command line. */
 
-static int topbar = 1;                      /* -b  option; if 0, dmenu appears at bottom     */
+static int topbar    = 1;                   /* -b  option; if 0, dmenu appears at bottom        */
+static int centerbar = 0;                   /* -c  option; if 0, dmenu appears at bottom or top */
 /* -fn option overrides fonts[0]; default X11 font or font set */
 static const char *fonts[] = {
 	"xos4 Terminus:pixelsize=14:antialias=true:autohint=true"
diff --git a/dmenu.1 b/dmenu.1
index 7ef34d2..751e1c9 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -3,7 +3,7 @@
 dmenu \- dynamic menu
 .SH SYNOPSIS
 .B dmenu
-.RB [ \-bfiv ]
+.RB [ \-bcfiv ]
 .RB [ \-l
 .IR lines ]
 .RB [ \-m
@@ -40,6 +40,9 @@ which lists programs in the user's $PATH and runs the result in their $SHELL.
 .B \-b
 dmenu appears at the bottom of the screen.
 .TP
+.B \-c
+dmenu appears at the center of the screen.
+.TP
 .B \-f
 dmenu grabs the keyboard before reading stdin if not reading from a tty. This
 is faster, but will lock up X until stdin reaches end\-of\-file.
diff --git a/dmenu.c b/dmenu.c
index a7919a3..28cac1c 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -89,6 +89,14 @@ calcoffsets(void)
 			break;
 }
 
+static int
+maxtextw() {
+	int len = 0;
+  for (struct item *item = items; item && item->text; item++)
+		len = MAX(TEXTW(item->text), len);
+	return len;
+}
+
 static void
 cleanup(void)
 {
@@ -612,6 +620,7 @@ setup(void)
 	bh = MAX(bh,lineheight);	/* make a menu line AT LEAST 'lineheight' tall */
 	lines = MAX(lines, 0);
 	mh = (lines + 1) * bh;
+	promptw = (prompt && *prompt) ? TEXTW(prompt) - lrpad / 4 : 0;
 #ifdef XINERAMA
 	i = 0;
 	if (parentwin == root && (info = XineramaQueryScreens(dpy, &n))) {
@@ -638,9 +647,10 @@ setup(void)
 				if (INTERSECT(x, y, 1, 1, info[i]))
 					break;
 
-		x = info[i].x_org;
-		y = info[i].y_org + (topbar ? 0 : info[i].height - mh);
-		mw = info[i].width;
+		mw = centerbar ? MIN(MAX(maxtextw() + promptw, 100), info[i].width) : info[i].width;
+		x = info[i].x_org + (centerbar ? ((info[i].width - mw) / 2) : 0);
+		y = info[i].y_org + (centerbar ? ((info[i].height - mh) / 2) : 0)
+      + (topbar ? 0 : info[i].height - mh);
 		XFree(info);
 	} else
 #endif
@@ -648,11 +658,10 @@ setup(void)
 		if (!XGetWindowAttributes(dpy, parentwin, &wa))
 			die("could not get embedding window attributes: 0x%lx",
 			    parentwin);
-		x = 0;
-		y = topbar ? 0 : wa.height - mh;
-		mw = wa.width;
+		mw = centerbar ? MIN(MAX(maxtextw() + promptw, 100), wa.width) : wa.width;
+		x = centerbar ? (wa.width - mw) / 2 : 0;
+		y = centerbar ? (wa.height - mh) / 2 : (topbar ? 0 : wa.height - mh);
 	}
-	promptw = (prompt && *prompt) ? TEXTW(prompt) - lrpad / 4 : 0;
 	inputw = MIN(inputw, mw/3);
 	match();
 
@@ -690,8 +699,7 @@ setup(void)
 static void
 usage(void)
 {
-	fputs("usage: dmenu [-bfiv] [-l lines] [-p prompt] [-fn font] [-m monitor]\n"
-	      "             [-h height]\n"
+	fputs("usage: dmenu [-bcfiv] [-l lines] [-p prompt] [-fn font] [-m monitor] [-h height]\n"
 	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-w windowid]\n", stderr);
 	exit(1);
 }
@@ -709,6 +717,8 @@ main(int argc, char *argv[])
 			exit(0);
 		} else if (!strcmp(argv[i], "-b")) /* appears at the bottom of the screen */
 			topbar = 0;
+		else if (!strcmp(argv[i], "-c")) /* appears at the center of the screen */
+			centerbar = 1;
 		else if (!strcmp(argv[i], "-f"))   /* grabs keyboard before reading stdin */
 			fast = 1;
 		else if (!strcmp(argv[i], "-i")) { /* case-insensitive item matching */
